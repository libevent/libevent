---
name: build

on:
  pull_request:
    types:
      - synchronize
      - reopened
      - opened
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.mailmap'
      - 'ChangeLog*'
      - 'whatsnew*'
      - 'LICENSE'
  push:
    branches:
      - openbsd-ci-fix
    paths-ignore:
      - '**.md'
      - '.mailmap'
      - 'ChangeLog*'
      - 'whatsnew*'
      - 'LICENSE'

permissions: read-all

jobs:
  apple-cmake-job:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci/macos skip') && !contains(github.event.head_commit.message, 'ci/macos/cmake skip')"
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        EVENT_MATRIX:
          - iphoneos
          - appletvos
          - xros
          - watchos

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ matrix.os }}-cmake-${{ matrix.EVENT_MATRIX }}-v4

      - name: Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build
        shell: bash
        run: |
          CMAKE_OSX_SYSROOT="${{ matrix.EVENT_MATRIX }}"

          echo [cmake]: cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT
          cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT || (rm -rf build && cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT)
          cmake --build build -t event_static

  android-cmake-job:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci/android skip') && !contains(github.event.head_commit.message, 'ci/android/cmake skip')"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        EVENT_MATRIX:
          - arm-linux-androideabi
          - aarch64-linux-android
          - i686-linux-android
          - x86_64-linux-android

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install latest NDK
        run: |
          latest_ndk=$(sdkmanager --list | grep -o "ndk;[0-9.]*" | sort -V | tail -1)
          echo "Installing $latest_ndk"
          sdkmanager "$latest_ndk"
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)" >> $GITHUB_ENV

      - name: Bash
        shell: bash
        run: |
          NDK_TRIPLE="${{ matrix.EVENT_MATRIX }}"
          EVENT_CMAKE_OPTIONS="'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'"
          echo [cmake]: cmake -B build $EVENT_CMAKE_FLAGS
          cmake -B build $EVENT_CMAKE_OPTIONS || (rm -rf build && cmake -B build $EVENT_CMAKE_OPTIONS)
          cmake --build build --target event_static


  # ABI job without deploy
  abi-job:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Dependencies
        run:
          sudo apt install
            abi-tracker
            abi-monitor
            abi-dumper
            abi-compliance-checker
            pkgdiff
            vtable-dumper
      # FIXME: clone git repo or report to debian
      - name: Patch abi-compliance-checker to avoid endless loop
        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch
      - name: Generate
        shell: bash
        run: |
          ./extra/abi-check/abi_check.sh
        env:
          ABI_CHECK_ROOT: /tmp/le-abi-root
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build
          path: /tmp/le-abi-root
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: /tmp/le-abi-root/work/abi-check
